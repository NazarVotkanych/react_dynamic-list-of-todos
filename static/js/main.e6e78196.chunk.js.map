{"version":3,"sources":["types/TodoFilter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","utils/PreparedTodos.ts","index.tsx"],"names":["TodosFilter","TodoList","todos","selectedTodo","onSelected","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","searchQuery","onQueryChange","selectedFilter","onfilterChange","value","onChange","event","selectFilter","target","All","Active","Completed","placeholder","newQuery","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onSelect","useState","user","setUser","loading","setLoading","useEffect","userId","catch","error","console","log","finally","href","email","name","App","setTodo","setSelectedTodo","query","setQuery","filter","setFilter","preparedTodos","useMemo","toLowerCase","includes","getpreparedTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6e78196.chunk.js","sourcesContent":["export enum TodosFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelected?: (todo: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelected = () => { },\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo === todo,\n          })}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelected(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye': selectedTodo !== todo,\n                    'fa-eye-slash': selectedTodo === todo,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { TodosFilter } from '../../types/TodoFilter';\n\ntype Props = {\n  searchQuery: string;\n  onQueryChange: (query: string) => void;\n  selectedFilter: TodosFilter;\n  onfilterChange: (filter: TodosFilter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchQuery,\n  onQueryChange,\n  selectedFilter,\n  onfilterChange,\n}) => {\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectFilter = event.target.value as TodosFilter;\n\n    onfilterChange(selectFilter);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    onQueryChange(newQuery);\n  };\n\n  const clear = () => {\n    onQueryChange('');\n    onfilterChange(TodosFilter.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={handleSelectChange}\n          >\n            <option value={TodosFilter.All}>All</option>\n            <option value={TodosFilter.Active}>Active</option>\n            <option value={TodosFilter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear\"\n              onClick={clear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedTodo,\n    onSelect,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .catch(error => {\n          // eslint-disable-next-line no-console\n          console.log(error);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodosFilter } from './types/TodoFilter';\nimport { getpreparedTodos } from './utils/PreparedTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<TodosFilter>(TodosFilter.All);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodo)\n      .catch((error) => {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const preparedTodos = useMemo(() => {\n    return getpreparedTodos(todos, query, filter);\n  }, [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={query}\n                onQueryChange={setQuery}\n                selectedFilter={filter}\n                onfilterChange={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && todos.length > 0 && (\n                <TodoList\n                  todos={preparedTodos}\n                  selectedTodo={selectedTodo}\n                  onSelected={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelect={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { TodosFilter } from '../types/TodoFilter';\n\nexport const getpreparedTodos = (\n  todos: Todo[],\n  query: string,\n  filter: TodosFilter,\n) => {\n  let preparedTodos = [...todos];\n\n  if (query) {\n    preparedTodos = preparedTodos\n      .filter(({ title }) => title.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  if (filter !== TodosFilter.All) {\n    switch (filter) {\n      case TodosFilter.Active:\n        preparedTodos = preparedTodos.filter((todo) => !todo.completed);\n        break;\n      case TodosFilter.Completed:\n        preparedTodos = preparedTodos.filter((todo) => todo.completed);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return preparedTodos;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}